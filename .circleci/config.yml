# Python CircleCI 2.0 configuration file
version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.7

    working_directory: ~/repo

    steps:
      # Step 1: obtain repo from GitHub
      - checkout

      # Step 2: Restore cache
      - restore_cache:
          keys:
            - venv-{{ checksum "requirements.txt" }}

      # Step 3: create virtual env and install dependencies
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      # Step 4: Build
      - run:
          name: build
          command: |
            . venv/bin/activate
            python setup.py sdist

      # Step 4: Cache venv
      - save_cache:
          key: venv-{{ checksum "requirements.txt" }}
          paths:
            - venv

      # Step 5: Save artifacts
      - persist_to_workspace:
          root: .
          paths:
            - dist

  deploy:
    docker:
      - image: circleci/python:3.7
    requires:
      - build
    working_directory: ~/repo

    steps:
      # Step 1: obtain repo from GitHub
      - checkout

      # Step 2: restore cache
      - restore_cache:
          keys:
            - venv-{{ checksum "requirements.txt" }}

      # Step 3: Get artifact
      - attach_workspace:
          at: ./dist

      # Step 4: create .pypirc
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = __token__" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      # Step 5: Upload to PyPi!
      - run:
          name: upload to pypi
          command: |
            . venv/bin/activate
            twine upload dist/*

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
