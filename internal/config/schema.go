// Code generated by go generate; DO NOT EDIT.
package config

var AwsServices = map[string]AwsService{
	"acm": AwsService{Name: "ACM", Types: []string{"Certificate"}},
	"amazonmq": AwsService{Name: "AmazonMQ", Types: []string{"Broker"}},
	"apigateway": AwsService{Name: "ApiGateway", Types: []string{"RestApi","Stage"}},
	"apigatewayv2": AwsService{Name: "ApiGatewayV2", Types: []string{"Api","Stage"}},
	"appconfig": AwsService{Name: "AppConfig", Types: []string{"Application","ConfigurationProfile","DeploymentStrategy","Environment"}},
	"appstream": AwsService{Name: "AppStream", Types: []string{"DirectoryConfig"}},
	"autoscaling": AwsService{Name: "AutoScaling", Types: []string{"AutoScalingGroup","LaunchConfiguration","ScalingPolicy","ScheduledAction","WarmPool"}},
	"backup": AwsService{Name: "Backup", Types: []string{"BackupPlan","BackupSelection","BackupVault","RecoveryPoint"}},
	"budgets": AwsService{Name: "Budgets", Types: []string{"BudgetsAction"}},
	"cloud9": AwsService{Name: "Cloud9", Types: []string{"EnvironmentEC2"}},
	"cloudformation": AwsService{Name: "CloudFormation", Types: []string{"Stack"}},
	"cloudfront": AwsService{Name: "CloudFront", Types: []string{"Distribution","StreamingDistribution"}},
	"cloudtrail": AwsService{Name: "CloudTrail", Types: []string{"Trail"}},
	"cloudwatch": AwsService{Name: "CloudWatch", Types: []string{"Alarm","MetricStream"}},
	"codebuild": AwsService{Name: "CodeBuild", Types: []string{"Project"}},
	"codedeploy": AwsService{Name: "CodeDeploy", Types: []string{"Application","DeploymentConfig","DeploymentGroup"}},
	"codegurureviewer": AwsService{Name: "CodeGuruReviewer", Types: []string{"RepositoryAssociation"}},
	"codepipeline": AwsService{Name: "CodePipeline", Types: []string{"Pipeline"}},
	"config": AwsService{Name: "Config", Types: []string{"ConfigurationRecorder","ConformancePackCompliance","ResourceCompliance"}},
	"connect": AwsService{Name: "Connect", Types: []string{"PhoneNumber"}},
	"customerprofiles": AwsService{Name: "CustomerProfiles", Types: []string{"Domain"}},
	"dms": AwsService{Name: "DMS", Types: []string{"Certificate","EventSubscription","ReplicationInstance","ReplicationSubnetGroup","ReplicationTask"}},
	"datasync": AwsService{Name: "DataSync", Types: []string{"LocationSMB"}},
	"detective": AwsService{Name: "Detective", Types: []string{"Graph"}},
	"devicefarm": AwsService{Name: "DeviceFarm", Types: []string{"InstanceProfile","Project","TestGridProject"}},
	"dynamodb": AwsService{Name: "DynamoDB", Types: []string{"Table"}},
	"ec2": AwsService{Name: "EC2", Types: []string{"CustomerGateway","DHCPOptions","EC2Fleet","EIP","EgressOnlyInternetGateway","FlowLog","Host","IPAM","Instance","InternetGateway","NatGateway","NetworkAcl","NetworkInterface","RegisteredHAInstance","RouteTable","SecurityGroup","Subnet","SubnetRouteTableAssociation","TrafficMirrorFilter","TrafficMirrorSession","TrafficMirrorTarget","VPC","VPCEndpoint","VPCEndpointService","VPCPeeringConnection","VPNConnection","VPNGateway","Volume"}},
	"ecr": AwsService{Name: "ECR", Types: []string{"PublicRepository","PullThroughCacheRule","RegistryPolicy","Repository"}},
	"ecs": AwsService{Name: "ECS", Types: []string{"Cluster","Service","TaskDefinition"}},
	"efs": AwsService{Name: "EFS", Types: []string{"AccessPoint","FileSystem"}},
	"eks": AwsService{Name: "EKS", Types: []string{"Addon","Cluster","FargateProfile","IdentityProviderConfig"}},
	"emr": AwsService{Name: "EMR", Types: []string{"SecurityConfiguration"}},
	"elasticbeanstalk": AwsService{Name: "ElasticBeanstalk", Types: []string{"Application","ApplicationVersion","Environment"}},
	"elasticloadbalancing": AwsService{Name: "ElasticLoadBalancing", Types: []string{"LoadBalancer"}},
	"elasticloadbalancingv2": AwsService{Name: "ElasticLoadBalancingV2", Types: []string{"LoadBalancer"}},
	"elasticsearch": AwsService{Name: "Elasticsearch", Types: []string{"Domain"}},
	"eventschemas": AwsService{Name: "EventSchemas", Types: []string{"Discoverer","Registry","RegistryPolicy","Schema"}},
	"events": AwsService{Name: "Events", Types: []string{"Connection","Rule"}},
	"frauddetector": AwsService{Name: "FraudDetector", Types: []string{"EntityType","Label","Outcome","Variable"}},
	"globalaccelerator": AwsService{Name: "GlobalAccelerator", Types: []string{"Accelerator","EndpointGroup","Listener"}},
	"glue": AwsService{Name: "Glue", Types: []string{"MLTransform"}},
	"groundstation": AwsService{Name: "GroundStation", Types: []string{"Config"}},
	"iam": AwsService{Name: "IAM", Types: []string{"Group","Policy","Role","User"}},
	"ivs": AwsService{Name: "IVS", Types: []string{"Channel","PlaybackKeyPair","RecordingConfiguration"}},
	"imagebuilder": AwsService{Name: "ImageBuilder", Types: []string{"ContainerRecipe","DistributionConfiguration","ImagePipeline","InfrastructureConfiguration"}},
	"iot": AwsService{Name: "IoT", Types: []string{"AccountAuditConfiguration","Authorizer","CustomMetric","Dimension","MitigationAction","Policy","RoleAlias","ScheduledAudit","SecurityProfile"}},
	"iotanalytics": AwsService{Name: "IoTAnalytics", Types: []string{"Channel","Dataset","Datastore","Pipeline"}},
	"iotsitewise": AwsService{Name: "IoTSiteWise", Types: []string{"AssetModel","Dashboard","Portal","Project"}},
	"iottwinmaker": AwsService{Name: "IoTTwinMaker", Types: []string{"Entity","Scene","Workspace"}},
	"iotwireless": AwsService{Name: "IoTWireless", Types: []string{"ServiceProfile"}},
	"kms": AwsService{Name: "KMS", Types: []string{"Alias","Key"}},
	"kinesis": AwsService{Name: "Kinesis", Types: []string{"Stream","StreamConsumer"}},
	"kinesisanalyticsv2": AwsService{Name: "KinesisAnalyticsV2", Types: []string{"Application"}},
	"kinesisvideo": AwsService{Name: "KinesisVideo", Types: []string{"SignalingChannel"}},
	"lambda": AwsService{Name: "Lambda", Types: []string{"Alias","Function"}},
	"lex": AwsService{Name: "Lex", Types: []string{"Bot","BotAlias"}},
	"lightsail": AwsService{Name: "Lightsail", Types: []string{"Bucket","Certificate","Disk","StaticIp"}},
	"lookoutvision": AwsService{Name: "LookoutVision", Types: []string{"Project"}},
	"msk": AwsService{Name: "MSK", Types: []string{"Cluster"}},
	"mediapackage": AwsService{Name: "MediaPackage", Types: []string{"PackagingGroup"}},
	"networkfirewall": AwsService{Name: "NetworkFirewall", Types: []string{"Firewall","FirewallPolicy","RuleGroup"}},
	"networkmanager": AwsService{Name: "NetworkManager", Types: []string{"Device","GlobalNetwork","Link","Site","TransitGatewayRegistration"}},
	"opensearch": AwsService{Name: "OpenSearch", Types: []string{"Domain"}},
	"pinpoint": AwsService{Name: "Pinpoint", Types: []string{"App","ApplicationSettings","Segment"}},
	"qldb": AwsService{Name: "QLDB", Types: []string{"Ledger"}},
	"rds": AwsService{Name: "RDS", Types: []string{"DBCluster","DBClusterSnapshot","DBInstance","DBSecurityGroup","DBSnapshot","DBSubnetGroup","EventSubscription","GlobalCluster"}},
	"redshift": AwsService{Name: "Redshift", Types: []string{"Cluster","ClusterParameterGroup","ClusterSecurityGroup","ClusterSnapshot","ClusterSubnetGroup","EventSubscription","ScheduledAction"}},
	"resiliencehub": AwsService{Name: "ResilienceHub", Types: []string{"ResiliencyPolicy"}},
	"robomaker": AwsService{Name: "RoboMaker", Types: []string{"RobotApplication","RobotApplicationVersion","SimulationApplication"}},
	"route53": AwsService{Name: "Route53", Types: []string{"HealthCheck","HostedZone"}},
	"route53recoverycontrol": AwsService{Name: "Route53RecoveryControl", Types: []string{"Cluster","ControlPanel","RoutingControl","SafetyRule"}},
	"route53recoveryreadiness": AwsService{Name: "Route53RecoveryReadiness", Types: []string{"ReadinessCheck","RecoveryGroup","ResourceSet"}},
	"route53resolver": AwsService{Name: "Route53Resolver", Types: []string{"FirewallDomainList","FirewallRuleGroupAssociation","ResolverRule","ResolverRuleAssociation"}},
	"s3": AwsService{Name: "S3", Types: []string{"AccountPublicAccessBlock","Bucket","MultiRegionAccessPoint","StorageLens"}},
	"ses": AwsService{Name: "SES", Types: []string{"ConfigurationSet","ContactList","ReceiptFilter","ReceiptRuleSet","Template"}},
	"sns": AwsService{Name: "SNS", Types: []string{"Topic"}},
	"sqs": AwsService{Name: "SQS", Types: []string{"Queue"}},
	"ssm": AwsService{Name: "SSM", Types: []string{"AssociationCompliance","FileData","ManagedInstanceInventory","PatchCompliance"}},
	"sagemaker": AwsService{Name: "SageMaker", Types: []string{"AppImageConfig","CodeRepository","EndpointConfig","Image","Model","NotebookInstance","NotebookInstanceLifecycleConfig","Workteam"}},
	"secretsmanager": AwsService{Name: "SecretsManager", Types: []string{"Secret"}},
	"servicecatalog": AwsService{Name: "ServiceCatalog", Types: []string{"CloudFormationProduct","CloudFormationProvisionedProduct","Portfolio"}},
	"shield": AwsService{Name: "Shield", Types: []string{"Protection"}},
	"shieldregional": AwsService{Name: "ShieldRegional", Types: []string{"Protection"}},
	"transfer": AwsService{Name: "Transfer", Types: []string{"Workflow"}},
	"waf": AwsService{Name: "WAF", Types: []string{"RateBasedRule","Rule","RuleGroup","WebACL"}},
	"wafregional": AwsService{Name: "WAFRegional", Types: []string{"RateBasedRule","Rule","RuleGroup","WebACL"}},
	"wafv2": AwsService{Name: "WAFv2", Types: []string{"IPSet","RegexPatternSet","RuleGroup","WebACL"}},
	"xray": AwsService{Name: "XRay", Types: []string{"EncryptionConfig"}},
}
