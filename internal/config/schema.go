// Code generated by go generate; DO NOT EDIT.
package config

var AwsServices = map[string]AwsService{
	"acm": AwsService{Name: "ACM", Types: []string{"Certificate"}},
	"acmpca": AwsService{Name: "ACMPCA", Types: []string{"CertificateAuthority"}},
	"aps": AwsService{Name: "APS", Types: []string{"RuleGroupsNamespace"}},
	"accessanalyzer": AwsService{Name: "AccessAnalyzer", Types: []string{"Analyzer"}},
	"amazonmq": AwsService{Name: "AmazonMQ", Types: []string{"Broker"}},
	"amplify": AwsService{Name: "Amplify", Types: []string{"App","Branch"}},
	"apigateway": AwsService{Name: "ApiGateway", Types: []string{"RestApi","Stage"}},
	"apigatewayv2": AwsService{Name: "ApiGatewayV2", Types: []string{"Api","Stage"}},
	"appconfig": AwsService{Name: "AppConfig", Types: []string{"Application","ConfigurationProfile","DeploymentStrategy","Environment","HostedConfigurationVersion"}},
	"appflow": AwsService{Name: "AppFlow", Types: []string{"Flow"}},
	"appintegrations": AwsService{Name: "AppIntegrations", Types: []string{"EventIntegration"}},
	"appmesh": AwsService{Name: "AppMesh", Types: []string{"Route","VirtualGateway","VirtualNode","VirtualRouter","VirtualService"}},
	"apprunner": AwsService{Name: "AppRunner", Types: []string{"Service","VpcConnector"}},
	"appstream": AwsService{Name: "AppStream", Types: []string{"Application","DirectoryConfig","Stack"}},
	"appsync": AwsService{Name: "AppSync", Types: []string{"GraphQLApi"}},
	"athena": AwsService{Name: "Athena", Types: []string{"DataCatalog","PreparedStatement","WorkGroup"}},
	"auditmanager": AwsService{Name: "AuditManager", Types: []string{"Assessment"}},
	"autoscaling": AwsService{Name: "AutoScaling", Types: []string{"AutoScalingGroup","LaunchConfiguration","ScalingPolicy","ScheduledAction","WarmPool"}},
	"backup": AwsService{Name: "Backup", Types: []string{"BackupPlan","BackupSelection","BackupVault","RecoveryPoint","ReportPlan"}},
	"batch": AwsService{Name: "Batch", Types: []string{"ComputeEnvironment","JobQueue","SchedulingPolicy"}},
	"budgets": AwsService{Name: "Budgets", Types: []string{"BudgetsAction"}},
	"cassandra": AwsService{Name: "Cassandra", Types: []string{"Keyspace"}},
	"cloud9": AwsService{Name: "Cloud9", Types: []string{"EnvironmentEC2"}},
	"cloudformation": AwsService{Name: "CloudFormation", Types: []string{"Stack"}},
	"cloudfront": AwsService{Name: "CloudFront", Types: []string{"Distribution","StreamingDistribution"}},
	"cloudtrail": AwsService{Name: "CloudTrail", Types: []string{"Trail"}},
	"cloudwatch": AwsService{Name: "CloudWatch", Types: []string{"Alarm","MetricStream"}},
	"codeartifact": AwsService{Name: "CodeArtifact", Types: []string{"Repository"}},
	"codebuild": AwsService{Name: "CodeBuild", Types: []string{"Project","ReportGroup"}},
	"codedeploy": AwsService{Name: "CodeDeploy", Types: []string{"Application","DeploymentConfig","DeploymentGroup"}},
	"codeguruprofiler": AwsService{Name: "CodeGuruProfiler", Types: []string{"ProfilingGroup"}},
	"codegurureviewer": AwsService{Name: "CodeGuruReviewer", Types: []string{"RepositoryAssociation"}},
	"codepipeline": AwsService{Name: "CodePipeline", Types: []string{"Pipeline"}},
	"config": AwsService{Name: "Config", Types: []string{"ConfigurationRecorder","ConformancePackCompliance","ResourceCompliance"}},
	"connect": AwsService{Name: "Connect", Types: []string{"PhoneNumber"}},
	"customerprofiles": AwsService{Name: "CustomerProfiles", Types: []string{"Domain","ObjectType"}},
	"dms": AwsService{Name: "DMS", Types: []string{"Certificate","EventSubscription","ReplicationInstance","ReplicationSubnetGroup","ReplicationTask"}},
	"datasync": AwsService{Name: "DataSync", Types: []string{"LocationEFS","LocationFSxLustre","LocationFSxWindows","LocationHDFS","LocationNFS","LocationObjectStorage","LocationS3","LocationSMB","Task"}},
	"detective": AwsService{Name: "Detective", Types: []string{"Graph"}},
	"devicefarm": AwsService{Name: "DeviceFarm", Types: []string{"InstanceProfile","Project","TestGridProject"}},
	"dynamodb": AwsService{Name: "DynamoDB", Types: []string{"Table"}},
	"ec2": AwsService{Name: "EC2", Types: []string{"CapacityReservation","ClientVpnEndpoint","CustomerGateway","DHCPOptions","EC2Fleet","EIP","EgressOnlyInternetGateway","FlowLog","Host","IPAM","IPAMScope","Instance","InternetGateway","LaunchTemplate","NatGateway","NetworkAcl","NetworkInsightsAccessScopeAnalysis","NetworkInterface","PrefixList","RegisteredHAInstance","RouteTable","SecurityGroup","SpotFleet","Subnet","SubnetRouteTableAssociation","TrafficMirrorFilter","TrafficMirrorSession","TrafficMirrorTarget","TransitGateway","TransitGatewayAttachment","TransitGatewayRouteTable","VPC","VPCEndpoint","VPCEndpointService","VPCPeeringConnection","VPNConnection","VPNGateway","Volume"}},
	"ecr": AwsService{Name: "ECR", Types: []string{"PublicRepository","PullThroughCacheRule","RegistryPolicy","Repository"}},
	"ecs": AwsService{Name: "ECS", Types: []string{"Cluster","Service","TaskDefinition","TaskSet"}},
	"efs": AwsService{Name: "EFS", Types: []string{"AccessPoint","FileSystem"}},
	"eks": AwsService{Name: "EKS", Types: []string{"Addon","Cluster","FargateProfile","IdentityProviderConfig"}},
	"emr": AwsService{Name: "EMR", Types: []string{"SecurityConfiguration"}},
	"elasticbeanstalk": AwsService{Name: "ElasticBeanstalk", Types: []string{"Application","ApplicationVersion","Environment"}},
	"elasticloadbalancing": AwsService{Name: "ElasticLoadBalancing", Types: []string{"LoadBalancer"}},
	"elasticloadbalancingv2": AwsService{Name: "ElasticLoadBalancingV2", Types: []string{"LoadBalancer"}},
	"elasticsearch": AwsService{Name: "Elasticsearch", Types: []string{"Domain"}},
	"eventschemas": AwsService{Name: "EventSchemas", Types: []string{"Discoverer","Registry","RegistryPolicy","Schema"}},
	"events": AwsService{Name: "Events", Types: []string{"ApiDestination","Archive","Connection","Endpoint","EventBus","Rule"}},
	"evidently": AwsService{Name: "Evidently", Types: []string{"Launch","Project"}},
	"forecast": AwsService{Name: "Forecast", Types: []string{"DatasetGroup"}},
	"frauddetector": AwsService{Name: "FraudDetector", Types: []string{"EntityType","Label","Outcome","Variable"}},
	"globalaccelerator": AwsService{Name: "GlobalAccelerator", Types: []string{"Accelerator","EndpointGroup","Listener"}},
	"glue": AwsService{Name: "Glue", Types: []string{"Classifier","Job","MLTransform"}},
	"greengrassv2": AwsService{Name: "GreengrassV2", Types: []string{"ComponentVersion"}},
	"groundstation": AwsService{Name: "GroundStation", Types: []string{"Config","MissionProfile"}},
	"guardduty": AwsService{Name: "GuardDuty", Types: []string{"Detector","Filter"}},
	"iam": AwsService{Name: "IAM", Types: []string{"Group","Policy","Role","SAMLProvider","ServerCertificate","User"}},
	"ivs": AwsService{Name: "IVS", Types: []string{"Channel","PlaybackKeyPair","RecordingConfiguration"}},
	"imagebuilder": AwsService{Name: "ImageBuilder", Types: []string{"ContainerRecipe","DistributionConfiguration","ImagePipeline","InfrastructureConfiguration"}},
	"inspectorv2": AwsService{Name: "InspectorV2", Types: []string{"Filter"}},
	"iot": AwsService{Name: "IoT", Types: []string{"AccountAuditConfiguration","Authorizer","CustomMetric","Dimension","JobTemplate","MitigationAction","Policy","ProvisioningTemplate","RoleAlias","ScheduledAudit","SecurityProfile"}},
	"iotanalytics": AwsService{Name: "IoTAnalytics", Types: []string{"Channel","Dataset","Datastore","Pipeline"}},
	"iotevents": AwsService{Name: "IoTEvents", Types: []string{"AlarmModel","DetectorModel","Input"}},
	"iotsitewise": AwsService{Name: "IoTSiteWise", Types: []string{"AssetModel","Dashboard","Portal","Project"}},
	"iottwinmaker": AwsService{Name: "IoTTwinMaker", Types: []string{"Entity","Scene","Workspace"}},
	"iotwireless": AwsService{Name: "IoTWireless", Types: []string{"FuotaTask","MulticastGroup","ServiceProfile"}},
	"kms": AwsService{Name: "KMS", Types: []string{"Alias","Key"}},
	"kendra": AwsService{Name: "Kendra", Types: []string{"Index"}},
	"kinesis": AwsService{Name: "Kinesis", Types: []string{"Stream","StreamConsumer"}},
	"kinesisanalyticsv2": AwsService{Name: "KinesisAnalyticsV2", Types: []string{"Application"}},
	"kinesisfirehose": AwsService{Name: "KinesisFirehose", Types: []string{"DeliveryStream"}},
	"kinesisvideo": AwsService{Name: "KinesisVideo", Types: []string{"SignalingChannel","Stream"}},
	"lambda": AwsService{Name: "Lambda", Types: []string{"Alias","Function"}},
	"lex": AwsService{Name: "Lex", Types: []string{"Bot","BotAlias"}},
	"lightsail": AwsService{Name: "Lightsail", Types: []string{"Bucket","Certificate","Disk","StaticIp"}},
	"logs": AwsService{Name: "Logs", Types: []string{"Destination"}},
	"lookoutvision": AwsService{Name: "LookoutVision", Types: []string{"Project"}},
	"msk": AwsService{Name: "MSK", Types: []string{"BatchScramSecret","Cluster","Configuration"}},
	"mediaconnect": AwsService{Name: "MediaConnect", Types: []string{"FlowSource","FlowVpcInterface"}},
	"mediapackage": AwsService{Name: "MediaPackage", Types: []string{"PackagingGroup"}},
	"mediatailor": AwsService{Name: "MediaTailor", Types: []string{"PlaybackConfiguration"}},
	"networkfirewall": AwsService{Name: "NetworkFirewall", Types: []string{"Firewall","FirewallPolicy","RuleGroup","TLSInspectionConfiguration"}},
	"networkmanager": AwsService{Name: "NetworkManager", Types: []string{"ConnectPeer","CustomerGatewayAssociation","Device","GlobalNetwork","Link","LinkAssociation","Site","TransitGatewayRegistration"}},
	"opensearch": AwsService{Name: "OpenSearch", Types: []string{"Domain"}},
	"panorama": AwsService{Name: "Panorama", Types: []string{"PackageVersion"}},
	"personalize": AwsService{Name: "Personalize", Types: []string{"Dataset","DatasetGroup","Schema","Solution"}},
	"pinpoint": AwsService{Name: "Pinpoint", Types: []string{"App","ApplicationSettings","Campaign","EmailChannel","EmailTemplate","EventStream","InAppTemplate","Segment"}},
	"qldb": AwsService{Name: "QLDB", Types: []string{"Ledger"}},
	"rds": AwsService{Name: "RDS", Types: []string{"DBCluster","DBClusterSnapshot","DBInstance","DBSecurityGroup","DBSnapshot","DBSubnetGroup","EventSubscription","GlobalCluster"}},
	"rum": AwsService{Name: "RUM", Types: []string{"AppMonitor"}},
	"redshift": AwsService{Name: "Redshift", Types: []string{"Cluster","ClusterParameterGroup","ClusterSecurityGroup","ClusterSnapshot","ClusterSubnetGroup","EventSubscription","ScheduledAction"}},
	"resiliencehub": AwsService{Name: "ResilienceHub", Types: []string{"App","ResiliencyPolicy"}},
	"robomaker": AwsService{Name: "RoboMaker", Types: []string{"RobotApplication","RobotApplicationVersion","SimulationApplication"}},
	"route53": AwsService{Name: "Route53", Types: []string{"HealthCheck","HostedZone"}},
	"route53recoverycontrol": AwsService{Name: "Route53RecoveryControl", Types: []string{"Cluster","ControlPanel","RoutingControl","SafetyRule"}},
	"route53recoveryreadiness": AwsService{Name: "Route53RecoveryReadiness", Types: []string{"Cell","ReadinessCheck","RecoveryGroup","ResourceSet"}},
	"route53resolver": AwsService{Name: "Route53Resolver", Types: []string{"FirewallDomainList","FirewallRuleGroupAssociation","ResolverQueryLoggingConfig","ResolverQueryLoggingConfigAssociation","ResolverRule","ResolverRuleAssociation"}},
	"s3": AwsService{Name: "S3", Types: []string{"AccessPoint","AccountPublicAccessBlock","Bucket","MultiRegionAccessPoint","StorageLens"}},
	"ses": AwsService{Name: "SES", Types: []string{"ConfigurationSet","ContactList","ReceiptFilter","ReceiptRuleSet","Template"}},
	"sns": AwsService{Name: "SNS", Types: []string{"Topic"}},
	"sqs": AwsService{Name: "SQS", Types: []string{"Queue"}},
	"ssm": AwsService{Name: "SSM", Types: []string{"AssociationCompliance","FileData","ManagedInstanceInventory","PatchCompliance"}},
	"sagemaker": AwsService{Name: "SageMaker", Types: []string{"AppImageConfig","CodeRepository","Domain","EndpointConfig","FeatureGroup","Image","Model","NotebookInstance","NotebookInstanceLifecycleConfig","Workteam"}},
	"secretsmanager": AwsService{Name: "SecretsManager", Types: []string{"Secret"}},
	"servicecatalog": AwsService{Name: "ServiceCatalog", Types: []string{"CloudFormationProduct","CloudFormationProvisionedProduct","Portfolio"}},
	"servicediscovery": AwsService{Name: "ServiceDiscovery", Types: []string{"HttpNamespace","Instance","PublicDnsNamespace","Service"}},
	"shield": AwsService{Name: "Shield", Types: []string{"Protection"}},
	"shieldregional": AwsService{Name: "ShieldRegional", Types: []string{"Protection"}},
	"signer": AwsService{Name: "Signer", Types: []string{"SigningProfile"}},
	"stepfunctions": AwsService{Name: "StepFunctions", Types: []string{"Activity","StateMachine"}},
	"transfer": AwsService{Name: "Transfer", Types: []string{"Agreement","Certificate","Connector","Workflow"}},
	"waf": AwsService{Name: "WAF", Types: []string{"RateBasedRule","Rule","RuleGroup","WebACL"}},
	"wafregional": AwsService{Name: "WAFRegional", Types: []string{"RateBasedRule","Rule","RuleGroup","WebACL"}},
	"wafv2": AwsService{Name: "WAFv2", Types: []string{"IPSet","ManagedRuleSet","RegexPatternSet","RuleGroup","WebACL"}},
	"workspaces": AwsService{Name: "WorkSpaces", Types: []string{"ConnectionAlias","Workspace"}},
	"xray": AwsService{Name: "XRay", Types: []string{"EncryptionConfig"}},
}
